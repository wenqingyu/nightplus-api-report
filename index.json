{
  "stats": {
    "suites": 8,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2017-06-29T09:40:11.103Z",
    "end": "2017-06-29T09:40:12.026Z",
    "duration": 923,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "PUBLIC API",
        "suites": [
          {
            "title": "#GET Homepage Section",
            "suites": [],
            "tests": [
              {
                "title": "should return Homepage Section",
                "fullTitle": "PUBLIC API #GET Homepage Section should return Homepage Section",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++title%2C%0A++++++++++++++++++++++++subTitle%2C%0A++++++++++++++++++++++++sectionType%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "fb9d3e2b-e32a-41f1-b55a-90b9341969db",
                "parentUUID": "ff9c1732-b0d4-472a-b7a3-6f58e6393f27",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "ff9c1732-b0d4-472a-b7a3-6f58e6393f27",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Homepage Section",
                "fullTitle": "PUBLIC API #GET Homepage Section should return Homepage Section",
                "timedOut": false,
                "duration": 101,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++title%2C%0A++++++++++++++++++++++++subTitle%2C%0A++++++++++++++++++++++++sectionType%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "fb9d3e2b-e32a-41f1-b55a-90b9341969db",
                "parentUUID": "ff9c1732-b0d4-472a-b7a3-6f58e6393f27",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 101,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues List Campaign",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues List Campaign",
                "fullTitle": "PUBLIC API #GET Venues List Campaign should return Venues List Campaign",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true%2C+sectionType%3A%22campaign-venues-list%22)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "06a2ef84-0a59-45a8-986f-8aabf2d512c7",
                "parentUUID": "14e7eb0e-0521-4035-805f-b889186676ab",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "14e7eb0e-0521-4035-805f-b889186676ab",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues List Campaign",
                "fullTitle": "PUBLIC API #GET Venues List Campaign should return Venues List Campaign",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true%2C+sectionType%3A%22campaign-venues-list%22)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "06a2ef84-0a59-45a8-986f-8aabf2d512c7",
                "parentUUID": "14e7eb0e-0521-4035-805f-b889186676ab",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 42,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues Venues List Data [KTV]",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues Venues List Data [KTV]",
                "fullTitle": "PUBLIC API #GET Venues Venues List Data [KTV] should return Venues Venues List Data [KTV]",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22KTV%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22%2C+latitude%3A+%2231.230416%22%2C+longitude%3A+%22121.473701%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "6d27ebfc-de2b-4757-b7d1-49b05dd277c3",
                "parentUUID": "5aa90dea-fdb1-4bea-9fa2-9b1823ddc45c",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "5aa90dea-fdb1-4bea-9fa2-9b1823ddc45c",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues Venues List Data [KTV]",
                "fullTitle": "PUBLIC API #GET Venues Venues List Data [KTV] should return Venues Venues List Data [KTV]",
                "timedOut": false,
                "duration": 358,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22KTV%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22%2C+latitude%3A+%2231.230416%22%2C+longitude%3A+%22121.473701%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "6d27ebfc-de2b-4757-b7d1-49b05dd277c3",
                "parentUUID": "5aa90dea-fdb1-4bea-9fa2-9b1823ddc45c",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 358,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues List Data [BAR]",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues List Data [BAR]",
                "fullTitle": "PUBLIC API #GET Venues List Data [BAR] should return Venues List Data [BAR]",
                "timedOut": false,
                "duration": 298,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22BAR%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5c2db7e1-d3ee-4cac-8834-ffea1acc12ac",
                "parentUUID": "e39162e2-5e77-42c0-a4fc-10387d8cc498",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "e39162e2-5e77-42c0-a4fc-10387d8cc498",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues List Data [BAR]",
                "fullTitle": "PUBLIC API #GET Venues List Data [BAR] should return Venues List Data [BAR]",
                "timedOut": false,
                "duration": 298,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22BAR%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5c2db7e1-d3ee-4cac-8834-ffea1acc12ac",
                "parentUUID": "e39162e2-5e77-42c0-a4fc-10387d8cc498",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 298,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues List Data [CLUB]",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues List Data [CLUB]",
                "fullTitle": "PUBLIC API #GET Venues List Data [CLUB] should return Venues List Data [CLUB]",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(cityId%3A+%2258d1ecade841a18ba5399026%22%2C+type%3A+%22CLUB%22%2C+isValid%3A+1%2C+isDeleted%3A+0)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5f45524d-430d-4554-9d6a-447c3efb3ad8",
                "parentUUID": "63276061-2988-466d-9278-2fa95f9610a4",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "63276061-2988-466d-9278-2fa95f9610a4",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues List Data [CLUB]",
                "fullTitle": "PUBLIC API #GET Venues List Data [CLUB] should return Venues List Data [CLUB]",
                "timedOut": false,
                "duration": 77,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(cityId%3A+%2258d1ecade841a18ba5399026%22%2C+type%3A+%22CLUB%22%2C+isValid%3A+1%2C+isDeleted%3A+0)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "5f45524d-430d-4554-9d6a-447c3efb3ad8",
                "parentUUID": "63276061-2988-466d-9278-2fa95f9610a4",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 77,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues List Feature",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues List Feature",
                "fullTitle": "PUBLIC API #GET Venues List Feature should return Venues List Feature",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++feature(filter%3A+%22ktv-filter%22%2C+limit%3A+5)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "43e472c3-ccd2-4838-9a81-58a515628342",
                "parentUUID": "fce81136-5687-42c6-a8be-739e0edb6c42",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "fce81136-5687-42c6-a8be-739e0edb6c42",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues List Feature",
                "fullTitle": "PUBLIC API #GET Venues List Feature should return Venues List Feature",
                "timedOut": false,
                "duration": 20,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++feature(filter%3A+%22ktv-filter%22%2C+limit%3A+5)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "43e472c3-ccd2-4838-9a81-58a515628342",
                "parentUUID": "fce81136-5687-42c6-a8be-739e0edb6c42",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 20,
            "rootEmpty": false
          },
          {
            "title": "#GET Venues List City List",
            "suites": [],
            "tests": [
              {
                "title": "should return Venues List City List",
                "fullTitle": "PUBLIC API #GET Venues List City List should return Venues List City List",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/cities').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "85074010-7231-4fed-93dc-00ccc1e9ebcd",
                "parentUUID": "01f75ebf-340b-4480-a7c6-0c11228f9212",
                "isHook": false,
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/test/publicAPI.js",
            "uuid": "01f75ebf-340b-4480-a7c6-0c11228f9212",
            "beforeHooks": [],
            "afterHooks": [],
            "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
            "passes": [
              {
                "title": "should return Venues List City List",
                "fullTitle": "PUBLIC API #GET Venues List City List should return Venues List City List",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/cities').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
                "err": {},
                "isRoot": false,
                "uuid": "85074010-7231-4fed-93dc-00ccc1e9ebcd",
                "parentUUID": "01f75ebf-340b-4480-a7c6-0c11228f9212",
                "isHook": false,
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasBeforeHooks": false,
            "hasAfterHooks": false,
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 16,
            "rootEmpty": false
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/test/publicAPI.js",
        "uuid": "02c0fa95-ecab-47e0-b616-2aef41351d3b",
        "beforeHooks": [],
        "afterHooks": [],
        "fullFile": "/Users/wenqingyu/workspace/APAC_Yedian_QA/testScript/test/publicAPI.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasBeforeHooks": false,
        "hasAfterHooks": false,
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0,
        "rootEmpty": false
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "5add30f7-c771-47f0-b3a6-ce4587b20b69",
    "beforeHooks": [],
    "afterHooks": [],
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasBeforeHooks": false,
    "hasAfterHooks": false,
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return Homepage Section",
      "fullTitle": "#GET Homepage Section should return Homepage Section",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++title%2C%0A++++++++++++++++++++++++subTitle%2C%0A++++++++++++++++++++++++sectionType%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fb9d3e2b-e32a-41f1-b55a-90b9341969db",
      "parentUUID": "ff9c1732-b0d4-472a-b7a3-6f58e6393f27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Campaign",
      "fullTitle": "#GET Venues List Campaign should return Venues List Campaign",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true%2C+sectionType%3A%22campaign-venues-list%22)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "06a2ef84-0a59-45a8-986f-8aabf2d512c7",
      "parentUUID": "14e7eb0e-0521-4035-805f-b889186676ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues Venues List Data [KTV]",
      "fullTitle": "#GET Venues Venues List Data [KTV] should return Venues Venues List Data [KTV]",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22KTV%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22%2C+latitude%3A+%2231.230416%22%2C+longitude%3A+%22121.473701%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "6d27ebfc-de2b-4757-b7d1-49b05dd277c3",
      "parentUUID": "5aa90dea-fdb1-4bea-9fa2-9b1823ddc45c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Data [BAR]",
      "fullTitle": "#GET Venues List Data [BAR] should return Venues List Data [BAR]",
      "timedOut": false,
      "duration": 298,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22BAR%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5c2db7e1-d3ee-4cac-8834-ffea1acc12ac",
      "parentUUID": "e39162e2-5e77-42c0-a4fc-10387d8cc498",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Data [CLUB]",
      "fullTitle": "#GET Venues List Data [CLUB] should return Venues List Data [CLUB]",
      "timedOut": false,
      "duration": 77,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(cityId%3A+%2258d1ecade841a18ba5399026%22%2C+type%3A+%22CLUB%22%2C+isValid%3A+1%2C+isDeleted%3A+0)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5f45524d-430d-4554-9d6a-447c3efb3ad8",
      "parentUUID": "63276061-2988-466d-9278-2fa95f9610a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Feature",
      "fullTitle": "#GET Venues List Feature should return Venues List Feature",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++feature(filter%3A+%22ktv-filter%22%2C+limit%3A+5)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "43e472c3-ccd2-4838-9a81-58a515628342",
      "parentUUID": "fce81136-5687-42c6-a8be-739e0edb6c42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List City List",
      "fullTitle": "#GET Venues List City List should return Venues List City List",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/cities').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "85074010-7231-4fed-93dc-00ccc1e9ebcd",
      "parentUUID": "01f75ebf-340b-4480-a7c6-0c11228f9212",
      "isHook": false,
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return Homepage Section",
      "fullTitle": "#GET Homepage Section should return Homepage Section",
      "timedOut": false,
      "duration": 101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++title%2C%0A++++++++++++++++++++++++subTitle%2C%0A++++++++++++++++++++++++sectionType%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "fb9d3e2b-e32a-41f1-b55a-90b9341969db",
      "parentUUID": "ff9c1732-b0d4-472a-b7a3-6f58e6393f27",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Campaign",
      "fullTitle": "#GET Venues List Campaign should return Venues List Campaign",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://cmscore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++view(isDisplayed%3A+true%2C+sectionType%3A%22campaign-venues-list%22)%0A++++++++++++++++%7B%0A++++++++++++++++++++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++viewType%2C%0A++++++++++++++++++++++++cityList%2C%0A++++++++++++++++++++++++url%2C%0A++++++++++++++++++++++++image%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A++++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "06a2ef84-0a59-45a8-986f-8aabf2d512c7",
      "parentUUID": "14e7eb0e-0521-4035-805f-b889186676ab",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues Venues List Data [KTV]",
      "fullTitle": "#GET Venues Venues List Data [KTV] should return Venues Venues List Data [KTV]",
      "timedOut": false,
      "duration": 358,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22KTV%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22%2C+latitude%3A+%2231.230416%22%2C+longitude%3A+%22121.473701%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "6d27ebfc-de2b-4757-b7d1-49b05dd277c3",
      "parentUUID": "5aa90dea-fdb1-4bea-9fa2-9b1823ddc45c",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Data [BAR]",
      "fullTitle": "#GET Venues List Data [BAR] should return Venues List Data [BAR]",
      "timedOut": false,
      "duration": 298,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(type%3A+%22BAR%22%2C+isValid%3A+1%2C+isDeleted%3A+0%2C+offset%3A+0%2C+limit%3A+27%2C+cityId%3A+%2258d1ecade841a18ba5399026%22)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5c2db7e1-d3ee-4cac-8834-ffea1acc12ac",
      "parentUUID": "e39162e2-5e77-42c0-a4fc-10387d8cc498",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Data [CLUB]",
      "fullTitle": "#GET Venues List Data [CLUB] should return Venues List Data [CLUB]",
      "timedOut": false,
      "duration": 77,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++venues(cityId%3A+%2258d1ecade841a18ba5399026%22%2C+type%3A+%22CLUB%22%2C+isValid%3A+1%2C+isDeleted%3A+0)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++type%2C%0A++++++++++++++++++++++++images%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++++++remarks%2C%0A++++++++++++++++++++++++distance%2C%0A++++++++++++++++++++++++comment%7B%0A++++++++++++++++++++++++++++totalScore%0A++++++++++++++++++++++++++++count%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++location%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++rating+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++type%0A++++++++++++++++++++++++++++rate%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++averageSpending%2C%0A++++++++++++++++++++++++combo+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++venueType%0A++++++++++++++++++++++++area+%7B%0A++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++city+%7B%0A++++++++++++++++++++++++++++++++_id%0A++++++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++++++phone_code%0A++++++++++++++++++++++++++++%7D%0A++++++++++++++++++++++++++++name%0A++++++++++++++++++++++++++++sort%0A++++++++++++++++++++++++%7D%2C%0A++++++++++++++++++++++++onlinePay%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "5f45524d-430d-4554-9d6a-447c3efb3ad8",
      "parentUUID": "63276061-2988-466d-9278-2fa95f9610a4",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List Feature",
      "fullTitle": "#GET Venues List Feature should return Venues List Feature",
      "timedOut": false,
      "duration": 20,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/graphql?query=%0A++++++++++++query+%7B%0A++++++++++++++++feature(filter%3A+%22ktv-filter%22%2C+limit%3A+5)%0A++++++++++++++++%7B+++count%2C%0A++++++++++++++++++++rows+%7B%0A++++++++++++++++++++++++_id%2C%0A++++++++++++++++++++++++name%2C%0A++++++++++++++++++++%7D%0A++++++++++++++++%7D%0A++++++++++++%7D%0A+++++++').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "43e472c3-ccd2-4838-9a81-58a515628342",
      "parentUUID": "fce81136-5687-42c6-a8be-739e0edb6c42",
      "isHook": false,
      "skipped": false
    },
    {
      "title": "should return Venues List City List",
      "fullTitle": "#GET Venues List City List should return Venues List City List",
      "timedOut": false,
      "duration": 16,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "request.getAsync('http://venuescore.prod-v1.ye-dian.com/public/cities').then(res => {\n  let data = JSON.parse(res.body)\n  assert.equal(data.code, 200)\n  done()\n})",
      "err": {},
      "isRoot": false,
      "uuid": "85074010-7231-4fed-93dc-00ccc1e9ebcd",
      "parentUUID": "01f75ebf-340b-4480-a7c6-0c11228f9212",
      "isHook": false,
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2017
}